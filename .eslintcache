[{"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\index.tsx":"1","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\App.tsx":"2","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Menu\\index.tsx":"3","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Menu\\components\\MenuItem\\index.tsx":"4","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Menu\\components\\MenuLogo\\index.tsx":"5","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Header\\index.tsx":"6","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\index.tsx":"7","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Places\\index.tsx":"8","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Places\\components\\Place\\index.tsx":"9","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\ViewPlace\\index.tsx":"10","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\index.ts":"11","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\api\\docvisionAPI.ts":"12","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\api\\usePlace.ts":"13","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\api\\useInvetory.ts":"14","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Inventorys\\index.tsx":"15","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Inventorys\\components\\Inventory\\index.tsx":"16","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Forms\\InventoryForm\\index.tsx":"17"},{"size":220,"mtime":1608203728228,"results":"18","hashOfConfig":"19"},{"size":492,"mtime":1608270594967,"results":"20","hashOfConfig":"19"},{"size":373,"mtime":1608270595242,"results":"21","hashOfConfig":"19"},{"size":275,"mtime":1608270595206,"results":"22","hashOfConfig":"19"},{"size":171,"mtime":1608270595223,"results":"23","hashOfConfig":"19"},{"size":479,"mtime":1608270595180,"results":"24","hashOfConfig":"19"},{"size":1228,"mtime":1608399276023,"results":"25","hashOfConfig":"19"},{"size":851,"mtime":1608398326083,"results":"26","hashOfConfig":"19"},{"size":947,"mtime":1608385249150,"results":"27","hashOfConfig":"19"},{"size":1058,"mtime":1608399463955,"results":"28","hashOfConfig":"19"},{"size":103,"mtime":1608325776223,"results":"29","hashOfConfig":"19"},{"size":1533,"mtime":1608401121474,"results":"30","hashOfConfig":"19"},{"size":775,"mtime":1608385765753,"results":"31","hashOfConfig":"19"},{"size":621,"mtime":1608326428807,"results":"32","hashOfConfig":"19"},{"size":1236,"mtime":1608398326048,"results":"33","hashOfConfig":"19"},{"size":674,"mtime":1608390171063,"results":"34","hashOfConfig":"19"},{"size":4078,"mtime":1608401121554,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1akm6gv",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\index.tsx",[],["73","74"],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\App.tsx",["75"],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Menu\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Menu\\components\\MenuItem\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Menu\\components\\MenuLogo\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Header\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Places\\index.tsx",["76","77","78"],"import React, {FC, useEffect, useState} from 'react';\r\nimport {Place} from \"./components/Place\";\r\nimport {PlacesData, PlaceType} from \"../../../types\";\r\nimport {api} from '../../../lib/api/docvisionAPI'\r\n\r\ntype Props = {\r\n  placesData: PlacesData\r\n}\r\nexport const Places : FC<Props>= ({placesData}) => {\r\n\r\n  const getPlace = (id: string): PlaceType | undefined => {\r\n    const place: PlaceType | undefined = placesData!.places.find(place => place.id === id)\r\n    if (place?.parts) {\r\n      place.parts.forEach(part => getPlace(part))\r\n    }\r\n    return place\r\n  }\r\n\r\n  return (\r\n    <div className={'layout__content__places'}>\r\n      {\r\n          placesData?.places.filter(place => place.id === 'main' || place.id === 'production')\r\n            .map(place => <Place key={place.id} place={place} getPlace={getPlace}/>)\r\n      }\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Places\\components\\Place\\index.tsx",["79"],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\ViewPlace\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\index.ts",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\api\\docvisionAPI.ts",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\api\\usePlace.ts",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\api\\useInvetory.ts",["80"],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Inventorys\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Inventorys\\components\\Inventory\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Forms\\InventoryForm\\index.tsx",["81","82"],"import React, {FC} from 'react';\r\nimport {useForm, SubmitHandler} from \"react-hook-form\";\r\nimport {PlacesData} from \"../../../../types\";\r\nimport {api} from '../../../../lib'\r\nimport {RouteComponentProps} from \"react-router-dom\";\r\n\r\ntype Inputs = {\r\n  name: string,\r\n  count: string,\r\n  placeId: string\r\n};\r\n\r\ntype FormValues = {\r\n  count: string,\r\n  name: string,\r\n  placeId: string\r\n}\r\n\r\ntype Props = {\r\n  placesData: PlacesData\r\n}\r\n\r\ntype MatchParams = {\r\n  placeId: string\r\n}\r\n\r\nexport const InventoryForm: FC<RouteComponentProps<MatchParams> & Props> =\r\n  ({ placesData, match}) => {\r\n\r\n    const currentPlace = match.params.placeId ?\r\n      placesData.places.find(place => place.id === match.params.placeId)\r\n      : null\r\n    const {register, handleSubmit, watch, errors} = useForm<Inputs>();\r\n\r\n    const onSubmit: SubmitHandler<FormValues> = async (data) => {\r\n      await api.addNewInventory({...data})\r\n    }\r\n\r\n    return (\r\n\r\n      <form className={'layout__content__form'} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n        <div className={'layout__content__form__field'}>\r\n          <span className={'layout__content__form__field__title'}> Наименование оборудования </span>\r\n          <input className={'layout__content__form__field__input'} name=\"name\"\r\n                 placeholder=\"Введите наименование оборудования\"\r\n                 ref={register({required: true, maxLength: 50})}/>\r\n          {errors.name?.type === 'required' ?\r\n            <span className={'layout__content__form__field__error'}>Обязательное поле</span> : null}\r\n          {errors.name?.type === 'maxLength' ?\r\n            <span className={'layout__content__form__field__error'}>Слишком много символов</span> : null}\r\n        </div>\r\n\r\n        <div className={'layout__content__form__field'}>\r\n          <span className={'layout__content__form__field__title'}> Количество единиц оборудования </span>\r\n          <input className={'layout__content__form__field__input'} name=\"count\"\r\n                 placeholder={'Укажите количество единиц оборудования'}\r\n                 ref={register({\r\n                   required: true,\r\n                   pattern: /\\d/,\r\n                   validate: value => parseInt(value) > 0 && parseInt(value) <= 100\r\n                 })}/>\r\n\r\n          {errors.count?.type === 'required' ?\r\n            <span className={'layout__content__form__field__error'}>Обязательное поле</span> : null}\r\n          {errors.count?.type === 'pattern' ?\r\n            <span className={'layout__content__form__field__error'}>Должны быть только цифры</span> : null}\r\n          {errors.count?.type === 'validate' ?\r\n            <span className={'layout__content__form__field__error'}>Слишком большое количество</span> : null}\r\n        </div>\r\n\r\n        <div className={'layout__content__form__field'}>\r\n          <span className={'layout__content__form__field__title'}> Местонахождение </span>\r\n          <select className={'layout__content__form__field__select'} name=\"placeId\"\r\n                  placeholder={'Укажите местонаходение оборудования'}\r\n                  defaultValue={currentPlace?.id || 'default'}\r\n                  ref={register({required: true})}>\r\n            <option value=\"default\">Выберите помещение</option>\r\n            {\r\n              placesData.places.map(place => {\r\n                if (place.parts) {\r\n                  return null\r\n                }\r\n                return (<option key={place.id} value={place.id}>{place.data.name}</option>\r\n                )\r\n              })\r\n            }\r\n          </select>\r\n          {errors.placeId ? <span className={'layout__content__form__field__error'}>Обязательное поле</span> : null}\r\n        </div>\r\n\r\n        <button className={'button'} type=\"submit\">Добавить</button>\r\n      </form>\r\n    )\r\n  };\r\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":4,"column":34,"nodeType":"89","messageId":"90","endLine":4,"endColumn":39},{"ruleId":"87","severity":1,"message":"91","line":1,"column":20,"nodeType":"89","messageId":"90","endLine":1,"endColumn":29},{"ruleId":"87","severity":1,"message":"92","line":1,"column":31,"nodeType":"89","messageId":"90","endLine":1,"endColumn":39},{"ruleId":"87","severity":1,"message":"93","line":4,"column":9,"nodeType":"89","messageId":"90","endLine":4,"endColumn":12},{"ruleId":"87","severity":1,"message":"94","line":3,"column":9,"nodeType":"89","messageId":"90","endLine":3,"endColumn":19},{"ruleId":"87","severity":1,"message":"94","line":2,"column":35,"nodeType":"89","messageId":"90","endLine":2,"endColumn":45},{"ruleId":"87","severity":1,"message":"95","line":13,"column":6,"nodeType":"89","messageId":"90","endLine":13,"endColumn":16},{"ruleId":"87","severity":1,"message":"96","line":31,"column":36,"nodeType":"89","messageId":"90","endLine":31,"endColumn":41},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'api' is defined but never used.","'PlacesData' is defined but never used.","'FormValues' is defined but never used.","'watch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]