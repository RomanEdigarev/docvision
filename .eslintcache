[{"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\index.tsx":"1","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\App.tsx":"2","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Menu\\index.tsx":"3","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Menu\\components\\MenuItem\\index.tsx":"4","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Menu\\components\\MenuLogo\\index.tsx":"5","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Header\\index.tsx":"6","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\index.tsx":"7","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Places\\index.tsx":"8","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Places\\components\\Place\\index.tsx":"9","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\ViewPlace\\index.tsx":"10","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\index.ts":"11","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\api\\docvisionAPI.ts":"12","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\api\\usePlace.ts":"13","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\api\\useInvetory.ts":"14","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Inventorys\\index.tsx":"15","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Inventorys\\components\\Inventory\\index.tsx":"16","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Forms\\InventoryForm\\index.tsx":"17","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Forms\\InventoryForm\\components\\add\\index.tsx":"18","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Forms\\InventoryForm\\components\\update\\index.tsx":"19"},{"size":220,"mtime":1608203728228,"results":"20","hashOfConfig":"21"},{"size":492,"mtime":1608270594967,"results":"22","hashOfConfig":"21"},{"size":373,"mtime":1608408729559,"results":"23","hashOfConfig":"21"},{"size":275,"mtime":1608270595206,"results":"24","hashOfConfig":"21"},{"size":171,"mtime":1608270595223,"results":"25","hashOfConfig":"21"},{"size":479,"mtime":1608270595180,"results":"26","hashOfConfig":"21"},{"size":2046,"mtime":1608460500316,"results":"27","hashOfConfig":"21"},{"size":779,"mtime":1608460500284,"results":"28","hashOfConfig":"21"},{"size":935,"mtime":1608460500236,"results":"29","hashOfConfig":"21"},{"size":1071,"mtime":1608459348394,"results":"30","hashOfConfig":"21"},{"size":103,"mtime":1608325776223,"results":"31","hashOfConfig":"21"},{"size":1994,"mtime":1608454560934,"results":"32","hashOfConfig":"21"},{"size":775,"mtime":1608385765753,"results":"33","hashOfConfig":"21"},{"size":621,"mtime":1608326428807,"results":"34","hashOfConfig":"21"},{"size":1234,"mtime":1608460500337,"results":"35","hashOfConfig":"21"},{"size":927,"mtime":1608459688829,"results":"36","hashOfConfig":"21"},{"size":1045,"mtime":1608459871887,"results":"37","hashOfConfig":"21"},{"size":3794,"mtime":1608458166061,"results":"38","hashOfConfig":"21"},{"size":3854,"mtime":1608459938199,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1akm6gv",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\index.tsx",[],["84","85"],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\App.tsx",["86"],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Menu\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Menu\\components\\MenuItem\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Menu\\components\\MenuLogo\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Header\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Places\\index.tsx",["87","88","89"],"import React, {FC, useEffect, useState} from 'react';\r\nimport {Place} from \"./components/Place\";\r\nimport {PlacesData, PlaceType} from \"../../../types\";\r\nimport {api} from '../../../lib/api/docvisionAPI'\r\n\r\ntype Props = {\r\n  placesData: PlacesData\r\n}\r\nexport const Places : FC<Props>= ({placesData}) => {\r\n\r\n  const getPlace = (id: string): PlaceType | undefined => {\r\n    const place: PlaceType | undefined = placesData!.places.find(place => place.id === id)\r\n    if (place?.parts) {\r\n      place.parts.forEach(part => getPlace(part))\r\n    }\r\n    return place\r\n  }\r\n\r\n  return (\r\n    <div className={'layout__content__places'}>\r\n      {\r\n          placesData?.places.filter(place => place.id === 'main' || place.id === 'production')\r\n            .map(place => <Place key={place.id} place={place} getPlace={getPlace}/>)\r\n      }\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Places\\components\\Place\\index.tsx",["90"],"import React, {FC} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {PlacesData, PlaceType} from \"../../../../../types\";\r\n\r\n\r\ntype Props = {\r\n  place: PlaceType\r\n  getPlace: (id: string) => PlaceType | undefined\r\n}\r\nexport const Place: FC<Props> = ({place, getPlace}) => {\r\n\r\n\r\n  return (\r\n    <>\r\n      {place.parts?.length > 0 ? (\r\n        <div className={'layout__content__place'}>\r\n          <div className={'layout__content__place__main'}>\r\n            {place.data.name}\r\n          </div>\r\n          <ul className={'layout__content__place__parts'}>\r\n            {\r\n              place.parts.map(part => <li key={part}>\r\n                {\r\n                  getPlace(part)?.parts ? <Place place={getPlace(part)!} getPlace={getPlace}/> :\r\n                   <Link to={`/place/${part}`}>{ getPlace(part)?.data.name}</Link>\r\n                }</li>)\r\n            }\r\n          </ul>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\ViewPlace\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\index.ts",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\api\\docvisionAPI.ts",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\api\\usePlace.ts",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\api\\useInvetory.ts",["91"],"import {useEffect, useState} from 'react'\r\nimport {Inventory, InventoryData, PlacesData} from \"../../types\";\r\nimport {api} from \"./docvisionAPI\";\r\n\r\nexport const useInventory = (placeId: string) : Inventory[] | undefined => {\r\n  const [inventoryData, setInventory] = useState<InventoryData>()\r\n\r\n\r\n  useEffect(() => {\r\n    const getInventory = async () => {\r\n      const {inventory} = await api.getInventory()\r\n      setInventory({inventory})\r\n    }\r\n    getInventory()\r\n\r\n  }, [])\r\n\r\n  const inventorysInPlace = inventoryData?.inventory.filter(inventory => inventory.placeId === placeId)\r\n  return inventorysInPlace\r\n}\r\n","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Inventorys\\index.tsx",["92","93","94","95"],"import React, {FC} from 'react';\r\nimport {InventoryData, PlacesData} from \"../../../types\";\r\nimport {InventoryItem} from \"./components/Inventory\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\ntype Props = {\r\n  placesData: PlacesData | null\r\n  inventoryData: InventoryData | null\r\n  deleteInventory: (inventoryId: string) => Promise<void>\r\n}\r\nexport const Inventorys: FC<Props> = ({placesData, inventoryData, deleteInventory}) => {\r\n\r\n  return (\r\n    <div className={'layout__content__inventorys'}>\r\n      <ul className={'layout__content__inventorys__items'}>\r\n        {\r\n          inventoryData?.inventory.map((invent) => {\r\n              const place = placesData?.places.find(place => place.id === invent.placeId)\r\n              return <li key={invent.id} className={'layout__content__inventorys__items__item'}>\r\n                <InventoryItem inventory={invent} place={place!} deleteInventory={deleteInventory}/>\r\n              </li>\r\n            }\r\n          )\r\n        }\r\n      </ul>\r\n      <Link to={`/inventory/add-new/`} className={'add-link'}>\r\n        <span className=\"material-icons\">add</span>\r\n        <span className={'add-link__text'}>Добавить оборудование</span>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Inventorys\\components\\Inventory\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Forms\\InventoryForm\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Forms\\InventoryForm\\components\\add\\index.tsx",["96"],"import React, {FC} from 'react';\r\nimport {SubmitHandler, useForm} from \"react-hook-form\";\r\nimport {api} from \"../../../../../../lib\";\r\nimport {PlacesData, PlaceType} from \"../../../../../../types\";\r\n\r\ntype Inputs = {\r\n  name: string,\r\n  count: string,\r\n  placeId: string\r\n};\r\n\r\ntype FormValues = {\r\n  count: string,\r\n  name: string,\r\n  placeId: string\r\n}\r\n\r\ntype Props = {\r\n  placesData: PlacesData | null\r\n  currentPlace?: PlaceType | null\r\n}\r\n\r\nexport const AddForm : FC<Props> = ({currentPlace, placesData}) => {\r\n  const {register, handleSubmit, errors} = useForm<Inputs>();\r\n\r\n  const onSubmit: SubmitHandler<FormValues> = async (data) => {\r\n    await api.addNewInventory({...data})\r\n    window.location.href = '/inventory'\r\n  }\r\n\r\n  return (\r\n\r\n    <form className={'layout__content__form'} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n      <div className={'layout__content__form__field'}>\r\n        <span className={'layout__content__form__field__title'}> Наименование оборудования </span>\r\n        <input className={'layout__content__form__field__input'} name=\"name\"\r\n               placeholder=\"Введите наименование оборудования\"\r\n               ref={register({required: true, maxLength: 50})}/>\r\n        {errors.name?.type === 'required' ?\r\n          <span className={'layout__content__form__field__error'}>Обязательное поле</span> : null}\r\n        {errors.name?.type === 'maxLength' ?\r\n          <span className={'layout__content__form__field__error'}>Слишком много символов</span> : null}\r\n      </div>\r\n\r\n      <div className={'layout__content__form__field'}>\r\n        <span className={'layout__content__form__field__title'}> Количество единиц оборудования </span>\r\n        <input className={'layout__content__form__field__input'} name=\"count\"\r\n               placeholder={'Укажите количество единиц оборудования'}\r\n               ref={register({\r\n                 required: true,\r\n                 pattern: /\\d/,\r\n                 validate: value => parseInt(value) > 0 && parseInt(value) <= 100\r\n               })}/>\r\n\r\n        {errors.count?.type === 'required' ?\r\n          <span className={'layout__content__form__field__error'}>Обязательное поле</span> : null}\r\n        {errors.count?.type === 'pattern' ?\r\n          <span className={'layout__content__form__field__error'}>Должны быть только цифры</span> : null}\r\n        {errors.count?.type === 'validate' ?\r\n          <span className={'layout__content__form__field__error'}>Слишком большое количество</span> : null}\r\n      </div>\r\n\r\n      <div className={'layout__content__form__field'}>\r\n        <span className={'layout__content__form__field__title'}> Местонахождение </span>\r\n        <select className={'layout__content__form__field__select'} name=\"placeId\"\r\n                placeholder={'Укажите местонаходение оборудования'}\r\n                defaultValue={currentPlace?.id || 'default'}\r\n                ref={register({required: true})}>\r\n          <option value=\"\" disabled>Выберите помещение</option>\r\n          {\r\n            placesData?.places.map(place => {\r\n              if (place.parts) {\r\n                return null\r\n              }\r\n              return (<option key={place.id} value={place.id}>{place.data.name}</option>\r\n              )\r\n            })\r\n          }\r\n        </select>\r\n        {errors.placeId ? <span className={'layout__content__form__field__error'}>Обязательное поле</span> : null}\r\n      </div>\r\n\r\n      <button className={'button'} type=\"submit\">Добавить</button>\r\n    </form>\r\n  )\r\n};\r\n","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Forms\\InventoryForm\\components\\update\\index.tsx",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":4,"column":34,"nodeType":"103","messageId":"104","endLine":4,"endColumn":39},{"ruleId":"101","severity":1,"message":"105","line":1,"column":20,"nodeType":"103","messageId":"104","endLine":1,"endColumn":29},{"ruleId":"101","severity":1,"message":"106","line":1,"column":31,"nodeType":"103","messageId":"104","endLine":1,"endColumn":39},{"ruleId":"101","severity":1,"message":"107","line":4,"column":9,"nodeType":"103","messageId":"104","endLine":4,"endColumn":12},{"ruleId":"101","severity":1,"message":"108","line":3,"column":9,"nodeType":"103","messageId":"104","endLine":3,"endColumn":19},{"ruleId":"101","severity":1,"message":"108","line":2,"column":35,"nodeType":"103","messageId":"104","endLine":2,"endColumn":45},{"ruleId":"101","severity":1,"message":"105","line":1,"column":20,"nodeType":"103","messageId":"104","endLine":1,"endColumn":29},{"ruleId":"101","severity":1,"message":"106","line":1,"column":31,"nodeType":"103","messageId":"104","endLine":1,"endColumn":39},{"ruleId":"101","severity":1,"message":"107","line":3,"column":9,"nodeType":"103","messageId":"104","endLine":3,"endColumn":12},{"ruleId":"101","severity":1,"message":"109","line":7,"column":6,"nodeType":"103","messageId":"104","endLine":7,"endColumn":11},{"ruleId":"101","severity":1,"message":"110","line":24,"column":34,"nodeType":"103","messageId":"104","endLine":24,"endColumn":39},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'api' is defined but never used.","'PlacesData' is defined but never used.","'State' is defined but never used.","'watch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]