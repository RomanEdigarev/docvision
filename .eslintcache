[{"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\index.tsx":"1","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\App.tsx":"2","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Menu\\index.tsx":"3","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Menu\\components\\MenuItem\\index.tsx":"4","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Menu\\components\\MenuLogo\\index.tsx":"5","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Header\\index.tsx":"6","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\index.tsx":"7","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Places\\index.tsx":"8","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Places\\components\\Place\\index.tsx":"9","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\ViewPlace\\index.tsx":"10","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\index.ts":"11","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\api\\docvisionAPI.ts":"12","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\api\\usePlace.ts":"13","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\api\\useInvetory.ts":"14","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Inventorys\\index.tsx":"15","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Inventorys\\components\\Inventory\\index.tsx":"16","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Forms\\InventoryForm\\index.tsx":"17","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Forms\\InventoryForm\\components\\add\\index.tsx":"18","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Forms\\InventoryForm\\components\\update\\index.tsx":"19"},{"size":220,"mtime":1608203728228,"results":"20","hashOfConfig":"21"},{"size":492,"mtime":1608270594967,"results":"22","hashOfConfig":"21"},{"size":373,"mtime":1608408729559,"results":"23","hashOfConfig":"21"},{"size":275,"mtime":1608270595206,"results":"24","hashOfConfig":"21"},{"size":171,"mtime":1608270595223,"results":"25","hashOfConfig":"21"},{"size":479,"mtime":1608270595180,"results":"26","hashOfConfig":"21"},{"size":1685,"mtime":1608408740030,"results":"27","hashOfConfig":"21"},{"size":851,"mtime":1608398326083,"results":"28","hashOfConfig":"21"},{"size":947,"mtime":1608385249150,"results":"29","hashOfConfig":"21"},{"size":1058,"mtime":1608399463955,"results":"30","hashOfConfig":"21"},{"size":103,"mtime":1608325776223,"results":"31","hashOfConfig":"21"},{"size":1814,"mtime":1608410261136,"results":"32","hashOfConfig":"21"},{"size":775,"mtime":1608385765753,"results":"33","hashOfConfig":"21"},{"size":621,"mtime":1608326428807,"results":"34","hashOfConfig":"21"},{"size":972,"mtime":1608406838694,"results":"35","hashOfConfig":"21"},{"size":741,"mtime":1608404355664,"results":"36","hashOfConfig":"21"},{"size":1303,"mtime":1608406838667,"results":"37","hashOfConfig":"21"},{"size":3858,"mtime":1608409388305,"results":"38","hashOfConfig":"21"},{"size":3760,"mtime":1608409914057,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1akm6gv",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\index.tsx",[],["81","82"],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\App.tsx",["83"],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Menu\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Menu\\components\\MenuItem\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Menu\\components\\MenuLogo\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Header\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Places\\index.tsx",["84","85","86"],"import React, {FC, useEffect, useState} from 'react';\r\nimport {Place} from \"./components/Place\";\r\nimport {PlacesData, PlaceType} from \"../../../types\";\r\nimport {api} from '../../../lib/api/docvisionAPI'\r\n\r\ntype Props = {\r\n  placesData: PlacesData\r\n}\r\nexport const Places : FC<Props>= ({placesData}) => {\r\n\r\n  const getPlace = (id: string): PlaceType | undefined => {\r\n    const place: PlaceType | undefined = placesData!.places.find(place => place.id === id)\r\n    if (place?.parts) {\r\n      place.parts.forEach(part => getPlace(part))\r\n    }\r\n    return place\r\n  }\r\n\r\n  return (\r\n    <div className={'layout__content__places'}>\r\n      {\r\n          placesData?.places.filter(place => place.id === 'main' || place.id === 'production')\r\n            .map(place => <Place key={place.id} place={place} getPlace={getPlace}/>)\r\n      }\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Places\\components\\Place\\index.tsx",["87"],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\ViewPlace\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\index.ts",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\api\\docvisionAPI.ts",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\api\\usePlace.ts",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\lib\\api\\useInvetory.ts",["88"],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Inventorys\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Inventorys\\components\\Inventory\\index.tsx",[],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Forms\\InventoryForm\\index.tsx",["89","90","91","92","93"],"import React, {FC} from 'react';\r\nimport {useForm, SubmitHandler} from \"react-hook-form\";\r\nimport {PlacesData} from \"../../../../types\";\r\nimport {api} from '../../../../lib'\r\nimport {RouteComponentProps} from \"react-router-dom\";\r\nimport {AddForm} from \"./components/add\";\r\n\r\ntype Inputs = {\r\n  name: string,\r\n  count: string,\r\n  placeId: string\r\n};\r\n\r\ntype FormValues = {\r\n  count: string,\r\n  name: string,\r\n  placeId: string\r\n}\r\n\r\ntype Props = {\r\n  placesData: PlacesData\r\n}\r\n\r\ntype MatchParams = {\r\n  placeId?: string\r\n  inventoryId?: string\r\n}\r\n\r\nexport const InventoryForm: FC<RouteComponentProps<MatchParams> & Props> =\r\n  ({ placesData, match}) => {\r\n\r\n    const currentPlace = match.params.placeId ?\r\n      placesData.places.find(place => place.id === match.params.placeId)\r\n      : null\r\n\r\n\r\n    return (\r\n      <AddForm currentPlace={currentPlace} placesData={placesData}/>\r\n    )\r\n  };\r\n","C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Forms\\InventoryForm\\components\\add\\index.tsx",["94","95"],"C:\\Users\\RomanEdigarev\\Desktop\\docVision\\docvision\\src\\sections\\Content\\Forms\\InventoryForm\\components\\update\\index.tsx",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":4,"column":34,"nodeType":"102","messageId":"103","endLine":4,"endColumn":39},{"ruleId":"100","severity":1,"message":"104","line":1,"column":20,"nodeType":"102","messageId":"103","endLine":1,"endColumn":29},{"ruleId":"100","severity":1,"message":"105","line":1,"column":31,"nodeType":"102","messageId":"103","endLine":1,"endColumn":39},{"ruleId":"100","severity":1,"message":"106","line":4,"column":9,"nodeType":"102","messageId":"103","endLine":4,"endColumn":12},{"ruleId":"100","severity":1,"message":"107","line":3,"column":9,"nodeType":"102","messageId":"103","endLine":3,"endColumn":19},{"ruleId":"100","severity":1,"message":"107","line":2,"column":35,"nodeType":"102","messageId":"103","endLine":2,"endColumn":45},{"ruleId":"100","severity":1,"message":"108","line":2,"column":9,"nodeType":"102","messageId":"103","endLine":2,"endColumn":16},{"ruleId":"100","severity":1,"message":"109","line":2,"column":18,"nodeType":"102","messageId":"103","endLine":2,"endColumn":31},{"ruleId":"100","severity":1,"message":"106","line":4,"column":9,"nodeType":"102","messageId":"103","endLine":4,"endColumn":12},{"ruleId":"100","severity":1,"message":"110","line":8,"column":6,"nodeType":"102","messageId":"103","endLine":8,"endColumn":12},{"ruleId":"100","severity":1,"message":"111","line":14,"column":6,"nodeType":"102","messageId":"103","endLine":14,"endColumn":16},{"ruleId":"100","severity":1,"message":"112","line":4,"column":9,"nodeType":"102","messageId":"103","endLine":4,"endColumn":28},{"ruleId":"100","severity":1,"message":"113","line":26,"column":34,"nodeType":"102","messageId":"103","endLine":26,"endColumn":39},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'api' is defined but never used.","'PlacesData' is defined but never used.","'useForm' is defined but never used.","'SubmitHandler' is defined but never used.","'Inputs' is defined but never used.","'FormValues' is defined but never used.","'RouteComponentProps' is defined but never used.","'watch' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]