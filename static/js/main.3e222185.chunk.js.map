{"version":3,"sources":["sections/Menu/components/MenuItem/index.tsx","sections/Menu/components/MenuLogo/index.tsx","sections/Menu/index.tsx","sections/Header/index.tsx","sections/Content/Places/components/Place/index.tsx","sections/Content/Places/index.tsx","lib/api/docvisionAPI.ts","sections/Content/ViewPlace/index.tsx","lib/api/usePlace.ts","lib/api/useInvetory.ts","sections/Content/Inventorys/components/Inventory/index.tsx","sections/Content/Inventorys/index.tsx","sections/Content/Forms/InventoryForm/components/add/index.tsx","sections/Content/Forms/InventoryForm/components/update/index.tsx","sections/Content/Forms/InventoryForm/index.tsx","sections/Content/index.tsx","App.tsx","index.tsx"],"names":["MenuItem","to","text","className","MenuLogo","Menu","Header","type","Place","place","getPlace","parts","length","data","name","map","part","Places","placesData","id","places","find","forEach","filter","api","getPlaces","a","firebase","firestore","collection","get","then","response","docs","x","getInventory","placeId","inventoryData","inventory","addNewInventory","count","filestore","doc","set","console","info","updateInventory","deleteInventory","inventoryId","delete","ViewPlace","match","params","useState","loading","setPlaces","useEffect","usePlace","inventorys","setInventory","useInventory","InventoryItem","onClick","Inventorys","invent","AddForm","currentPlace","useForm","register","handleSubmit","errors","onSubmit","window","location","href","placeholder","ref","required","maxLength","pattern","validate","value","parseInt","defaultValue","disabled","UpdateForm","currentInventory","InventoryForm","URLSearchParams","useLocation","search","Content","setState","getState","log","index","findIndex","splice","exact","path","render","props","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e222185.chunk.js","sourcesContent":["import React, {FC} from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\ntype Props = {\r\n  to: string\r\n  text: string\r\n}\r\nexport const MenuItem : FC<Props> = ({to, text}) => {\r\n  return (\r\n    <Link className={'menu__item'} to={to}>\r\n      {text}\r\n    </Link>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\n\r\nconst MenuLogo = () => {\r\n  return (\r\n    <div className={'menu__logo'}>\r\n      MENU LOGO\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuLogo;\r\n","import React from 'react';\r\nimport {MenuItem} from \"./components/MenuItem\";\r\nimport MenuLogo from \"./components/MenuLogo\";\r\n\r\nexport const Menu = () => {\r\n  return (\r\n    <div className={'menu'}>\r\n      <MenuLogo/>\r\n      <MenuItem text={'Помещения'} to={'/places'}/>\r\n      <MenuItem text={'Оборудование'} to={'/inventory'}/>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <div className={'layout__header'}>\r\n      <div className=\"layout__header__search\">\r\n        <span className=\"material-icons\">search</span>\r\n        <input className={'layout__header__search__input'} type=\"text\"/>\r\n      </div>\r\n     <div className=\"layout__header__profile\">\r\n       <span className=\"material-icons\">perm_identity</span>\r\n       <span>Profile</span>\r\n     </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, {FC} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {PlaceType} from \"../../../../../types\";\r\n\r\n\r\ntype Props = {\r\n  place: PlaceType\r\n  getPlace: (id: string) => PlaceType | undefined\r\n}\r\nexport const Place: FC<Props> = ({place, getPlace}) => {\r\n\r\n\r\n  return (\r\n    <>\r\n      {place.parts?.length > 0 ? (\r\n        <div className={'layout__content__place'}>\r\n          <div className={'layout__content__place__main'}>\r\n            {place.data.name}\r\n          </div>\r\n          <ul className={'layout__content__place__parts'}>\r\n            {\r\n              place.parts.map(part => <li key={part}>\r\n                {\r\n                  getPlace(part)?.parts ? <Place place={getPlace(part)!} getPlace={getPlace}/> :\r\n                   <Link to={`/place/${part}`}>{ getPlace(part)?.data.name}</Link>\r\n                }</li>)\r\n            }\r\n          </ul>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n","import React, {FC} from 'react';\r\nimport {Place} from \"./components/Place\";\r\nimport {PlacesData, PlaceType} from \"../../../types\";\r\n\r\ntype Props = {\r\n  placesData: PlacesData\r\n}\r\nexport const Places : FC<Props>= ({placesData}) => {\r\n\r\n  const getPlace = (id: string): PlaceType | undefined => {\r\n    const place: PlaceType | undefined = placesData!.places.find(place => place.id === id)\r\n    if (place?.parts) {\r\n      place.parts.forEach(part => getPlace(part))\r\n    }\r\n    return place\r\n  }\r\n\r\n  return (\r\n    <div className={'layout__content__places'}>\r\n      {\r\n          placesData?.places.filter(place => place.id === 'main' || place.id === 'production')\r\n            .map(place => <Place key={place.id} place={place} getPlace={getPlace}/>)\r\n      }\r\n    </div>\r\n  );\r\n};\r\n","import {Inventory, InventoryData, PlacesData, PlaceType} from \"../../types\";\r\n\r\nexport const api = {\r\n  getPlaces: async (): Promise<PlacesData> => {\r\n    // @ts-ignore\r\n    const placesData: PlaceType[] = await firebase.firestore().collection(\"places\").get()\r\n      .then(response => {\r\n        let docs: PlacesData = response.docs.map(x => ({\r\n          id: x.id,\r\n          data: x.data(),\r\n          parts: x.data().parts && x.data().parts.map(part => part.id)\r\n        }));\r\n        return docs\r\n      });\r\n    return {\r\n      places: placesData\r\n    }\r\n  },\r\n\r\n  getInventory: async (): Promise<InventoryData> => {\r\n    // @ts-ignore\r\n    const inventoryData: Inventory[] = await firebase.firestore().collection(\"inventory\").get()\r\n      .then(response => {\r\n        // eslint-disable-next-line array-callback-return\r\n        let docs: Inventory[] = response.docs.map(x => {\r\n          if (x.data().place) {\r\n            return ({\r\n              id: x.id,\r\n              data: x.data(),\r\n              placeId: x.data()?.place.id\r\n            })\r\n          }\r\n        });\r\n        return docs\r\n      });\r\n    return {\r\n      inventory: inventoryData.filter(inventory => inventory)\r\n    }\r\n  },\r\n\r\n  addNewInventory: async ({name, count, placeId}) => {\r\n    // @ts-ignore\r\n    let filestore = firebase.firestore();\r\n    await filestore.collection(\"inventory\").doc().set({\r\n      name,\r\n      count,\r\n      place: filestore.collection(\"places\").doc(`${placeId}`)\r\n    }).then(() => {\r\n\r\n      console.info(\"Done\");\r\n    });\r\n  },\r\n\r\n  updateInventory: async (placeId: string, count: string) => {\r\n    // @ts-ignore\r\n    await firebase.firestore().collection(\"inventory\").doc(`${placeId}`).set({\r\n      count\r\n    }).then(() => {\r\n      console.info(\"Done\");\r\n    });\r\n  },\r\n\r\n  deleteInventory: async (inventoryId: string) => {\r\n    // @ts-ignore\r\n    await firebase.firestore().collection(\"inventory\").doc(inventoryId).delete().then(() => {\r\n      console.info(\"Done\");\r\n    })\r\n  }\r\n\r\n}\r\n","import React, {FC} from 'react';\r\nimport {Link, RouteComponentProps} from 'react-router-dom'\r\nimport {usePlace, useInventory} from '../../../lib'\r\n\r\ntype MatchParams = {\r\n  id: string\r\n}\r\n\r\n// usePlace и useInventory используются для демонстрации\r\nexport const ViewPlace: FC<RouteComponentProps<MatchParams>> = ({match}:any) => {\r\n  const placeId = match.params.id\r\n  const {place, loading} = usePlace(placeId)\r\n  const inventorys = useInventory(placeId)\r\n\r\n  if(loading) {\r\n    return <div>Loading</div>\r\n  }\r\n\r\n  return (\r\n    <div className={'layout__content__view-place'}>\r\n      <h1>\r\n        {place?.data.name}\r\n      </h1>\r\n      <ul>\r\n        {\r\n          inventorys?.map(inventory => <li key={inventory.id}>{inventory.data.name}</li>)\r\n        }\r\n      </ul>\r\n      <Link to={`/inventory/add-new/data?placeId=${place?.id}`} className={'add-link'}>\r\n        <span className=\"material-icons\">add</span>\r\n        <span className={'add-link__text'}>Добавить оборудование</span>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\n","import {useState, useEffect} from 'react'\r\nimport {PlacesData, PlaceType} from \"../../types\";\r\nimport {api} from \"./docvisionAPI\";\r\n\r\ntype UsePlaceType = {\r\n  place: PlaceType | undefined,\r\n  loading: boolean\r\n}\r\n\r\ntype State = {\r\n  placesData: PlacesData | null\r\n  loading: boolean\r\n}\r\nexport const usePlace = (id: string): UsePlaceType => {\r\n  const [{placesData, loading}, setPlaces] = useState<State>({loading: true, placesData: null})\r\n\r\n  useEffect(() => {\r\n    const getPlaces = async () => {\r\n      const places = await api.getPlaces()\r\n      if (places) {\r\n        setPlaces({placesData: places, loading: false})\r\n      }\r\n    }\r\n    getPlaces()\r\n  }, [])\r\n\r\n  const place = placesData?.places.find(place => place.id === id)\r\n  return {\r\n    place, loading\r\n  }\r\n}\r\n","import {useEffect, useState} from 'react'\r\nimport {Inventory, InventoryData, PlacesData} from \"../../types\";\r\nimport {api} from \"./docvisionAPI\";\r\n\r\nexport const useInventory = (placeId: string) : Inventory[] | undefined => {\r\n  const [inventoryData, setInventory] = useState<InventoryData>()\r\n\r\n\r\n  useEffect(() => {\r\n    const getInventory = async () => {\r\n      const {inventory} = await api.getInventory()\r\n      setInventory({inventory})\r\n    }\r\n    getInventory()\r\n\r\n  }, [])\r\n\r\n  const inventorysInPlace = inventoryData?.inventory.filter(inventory => inventory.placeId === placeId)\r\n  return inventorysInPlace\r\n}\r\n","import React, {FC} from 'react';\r\nimport {Inventory, PlaceType} from \"../../../../../types\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\ntype Props = {\r\n  inventory: Inventory\r\n  place: PlaceType\r\n  deleteInventory: (inventoryId: string) => Promise<void>\r\n}\r\n\r\nexport const InventoryItem: FC<Props> = ({inventory, place, deleteInventory}) => {\r\n\r\n  return (\r\n    <>\r\n      <h1>{inventory.data.name}</h1>\r\n      <div className={'layout__content__inventorys__items__item__description'}>\r\n        <div><Link to={`/place/${place.id}`}>Место нахождения: {place.data.name}</Link></div>\r\n        <span>Количество: {inventory.data.count}</span>\r\n      </div>\r\n      <Link to={`/inventory/add-new/data?placeId=${place.id}&inventoryId=${inventory.id}`}><button>Редактировать</button></Link>\r\n      <button onClick={() => deleteInventory(inventory.id)}>Удалить</button>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n","import React, {FC} from 'react';\r\nimport {InventoryData, PlacesData} from \"../../../types\";\r\nimport {InventoryItem} from \"./components/Inventory\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\ntype Props = {\r\n  placesData: PlacesData | null\r\n  inventoryData: InventoryData | null\r\n  deleteInventory: (inventoryId: string) => Promise<void>\r\n}\r\nexport const Inventorys: FC<Props> = ({placesData, inventoryData, deleteInventory}) => {\r\n\r\n  return (\r\n    <div className={'layout__content__inventorys'}>\r\n      <ul className={'layout__content__inventorys__items'}>\r\n        {\r\n          inventoryData?.inventory.map((invent) => {\r\n              const place = placesData?.places.find(place => place.id === invent.placeId)\r\n              return <li key={invent.id} className={'layout__content__inventorys__items__item'}>\r\n                <InventoryItem inventory={invent} place={place!} deleteInventory={deleteInventory}/>\r\n              </li>\r\n            }\r\n          )\r\n        }\r\n      </ul>\r\n      <Link to={`/inventory/add-new/`} className={'add-link'}>\r\n        <span className=\"material-icons\">add</span>\r\n        <span className={'add-link__text'}>Добавить оборудование</span>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n","import React, {FC} from 'react';\r\nimport {SubmitHandler, useForm} from \"react-hook-form\";\r\nimport {api} from \"../../../../../../lib\";\r\nimport {PlacesData, PlaceType} from \"../../../../../../types\";\r\n\r\ntype Inputs = {\r\n  name: string,\r\n  count: string,\r\n  placeId: string\r\n};\r\n\r\ntype FormValues = {\r\n  count: string,\r\n  name: string,\r\n  placeId: string\r\n}\r\n\r\ntype Props = {\r\n  placesData: PlacesData | null\r\n  currentPlace?: PlaceType | null\r\n}\r\n\r\nexport const AddForm : FC<Props> = ({currentPlace, placesData}) => {\r\n  const {register, handleSubmit, errors} = useForm<Inputs>();\r\n\r\n  const onSubmit: SubmitHandler<FormValues> = async (data) => {\r\n    await api.addNewInventory({...data})\r\n    window.location.href = '/inventory'\r\n  }\r\n\r\n  return (\r\n\r\n    <form className={'layout__content__form'} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n      <div className={'layout__content__form__field'}>\r\n        <span className={'layout__content__form__field__title'}> Наименование оборудования </span>\r\n        <input className={'layout__content__form__field__input'} name=\"name\"\r\n               placeholder=\"Введите наименование оборудования\"\r\n               ref={register({required: true, maxLength: 50})}/>\r\n        {errors.name?.type === 'required' ?\r\n          <span className={'layout__content__form__field__error'}>Обязательное поле</span> : null}\r\n        {errors.name?.type === 'maxLength' ?\r\n          <span className={'layout__content__form__field__error'}>Слишком много символов</span> : null}\r\n      </div>\r\n\r\n      <div className={'layout__content__form__field'}>\r\n        <span className={'layout__content__form__field__title'}> Количество единиц оборудования </span>\r\n        <input className={'layout__content__form__field__input'} name=\"count\"\r\n               placeholder={'Укажите количество единиц оборудования'}\r\n               ref={register({\r\n                 required: true,\r\n                 pattern: /\\d/,\r\n                 validate: value => parseInt(value) > 0 && parseInt(value) <= 100\r\n               })}/>\r\n\r\n        {errors.count?.type === 'required' ?\r\n          <span className={'layout__content__form__field__error'}>Обязательное поле</span> : null}\r\n        {errors.count?.type === 'pattern' ?\r\n          <span className={'layout__content__form__field__error'}>Должны быть только цифры</span> : null}\r\n        {errors.count?.type === 'validate' ?\r\n          <span className={'layout__content__form__field__error'}>Слишком большое количество</span> : null}\r\n      </div>\r\n\r\n      <div className={'layout__content__form__field'}>\r\n        <span className={'layout__content__form__field__title'}> Местонахождение </span>\r\n        <select className={'layout__content__form__field__select'} name=\"placeId\"\r\n                placeholder={'Укажите местонаходение оборудования'}\r\n                defaultValue={currentPlace?.id || 'default'}\r\n                ref={register({required: true})}>\r\n          <option value=\"\" disabled>Выберите помещение</option>\r\n          {\r\n            placesData?.places.map(place => {\r\n              if (place.parts) {\r\n                return null\r\n              }\r\n              return (<option key={place.id} value={place.id}>{place.data.name}</option>\r\n              )\r\n            })\r\n          }\r\n        </select>\r\n        {errors.placeId ? <span className={'layout__content__form__field__error'}>Обязательное поле</span> : null}\r\n      </div>\r\n\r\n      <button className={'button'} type=\"submit\">Добавить</button>\r\n    </form>\r\n  )\r\n};\r\n","import React, {FC} from 'react';\r\nimport {Inventory, PlacesData, PlaceType} from \"../../../../../../types\";\r\nimport {SubmitHandler, useForm} from \"react-hook-form\";\r\nimport {api} from \"../../../../../../lib\";\r\n\r\ntype Inputs = {\r\n  name: string,\r\n  count: string,\r\n  placeId: string\r\n};\r\n\r\ntype FormValues = {\r\n  count: string,\r\n  name: string,\r\n}\r\n\r\ntype Props = {\r\n  placesData: PlacesData\r\n  currentPlace: PlaceType\r\n  currentInventory: Inventory\r\n}\r\nexport const UpdateForm: FC<Props> = ({currentPlace, currentInventory, placesData}) => {\r\n  const {register, handleSubmit, errors} = useForm<Inputs>();\r\n\r\n  // оставляю здесь так как не работает обновленеие оборудование на сервере\r\n  const onSubmit: SubmitHandler<FormValues> = async (data) => {\r\n    await api.updateInventory(currentInventory.id, data.count)\r\n  }\r\n\r\n  return (\r\n    <form className={'layout__content__form'} onSubmit={handleSubmit(onSubmit)}>\r\n\r\n      <div className={'layout__content__form__field'}>\r\n        <span className={'layout__content__form__field__title'}> Наименование оборудования </span>\r\n        <input className={'layout__content__form__field__input'} name=\"name\"\r\n               defaultValue={currentInventory.data.name}\r\n               ref={register({required: true, maxLength: 50})}/>\r\n        {errors.name?.type === 'required' ?\r\n          <span className={'layout__content__form__field__error'}>Обязательное поле</span> : null}\r\n        {errors.name?.type === 'maxLength' ?\r\n          <span className={'layout__content__form__field__error'}>Слишком много символов</span> : null}\r\n      </div>\r\n\r\n      <div className={'layout__content__form__field'}>\r\n        <span className={'layout__content__form__field__title'}> Количество единиц оборудования </span>\r\n        <input className={'layout__content__form__field__input'} name=\"count\"\r\n               defaultValue={currentInventory.data.count}\r\n               ref={register({\r\n                 required: true,\r\n                 pattern: /\\d/,\r\n                 validate: value => parseInt(value) > 0 && parseInt(value) <= 100\r\n               })}/>\r\n\r\n        {errors.count?.type === 'required' ?\r\n          <span className={'layout__content__form__field__error'}>Обязательное поле</span> : null}\r\n        {errors.count?.type === 'pattern' ?\r\n          <span className={'layout__content__form__field__error'}>Должны быть только цифры</span> : null}\r\n        {errors.count?.type === 'validate' ?\r\n          <span className={'layout__content__form__field__error'}>Слишком большое количество</span> : null}\r\n      </div>\r\n\r\n      <div className={'layout__content__form__field'}>\r\n        <span className={'layout__content__form__field__title'}> Местонахождение </span>\r\n        <select className={'layout__content__form__field__select'} name=\"placeId\"\r\n                placeholder={'Укажите местонаходение оборудования'}\r\n                defaultValue={currentPlace.id || 'default'}\r\n                ref={register({required: true})}>\r\n          <option value=\"\" disabled>Выберите помещение</option>\r\n          {\r\n            placesData.places.map(place => {\r\n              if (place.parts) {\r\n                return null\r\n              }\r\n              return (<option key={place.id} value={place.id}>{place.data.name}</option>\r\n              )\r\n            })\r\n          }\r\n        </select>\r\n        {errors.placeId ? <span className={'layout__content__form__field__error'}>Обязательное поле</span> : null}\r\n      </div>\r\n\r\n      <button className={'button'} type=\"submit\">Сохранить</button>\r\n    </form>\r\n  );\r\n};\r\n","import React, {FC} from 'react';\r\nimport {InventoryData, PlacesData} from \"../../../../types\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {AddForm} from \"./components/add\";\r\nimport {UpdateForm} from \"./components/update\";\r\n\r\ntype Props = {\r\n  placesData: PlacesData | null\r\n  inventoryData?: InventoryData | null\r\n}\r\n\r\nexport const InventoryForm: FC<Props> =\r\n  ({placesData, inventoryData}) => {\r\n\r\n    const placeId = new URLSearchParams(useLocation().search).get('placeId')\r\n    const inventoryId = new URLSearchParams(useLocation().search).get('inventoryId')\r\n\r\n    const currentPlace = placeId ?\r\n      placesData?.places.find(place => place.id === placeId) : null\r\n    const currentInventory = inventoryId ?\r\n      inventoryData?.inventory.find(invent => invent.id === inventoryId) : null\r\n\r\n    if (currentInventory) {\r\n      return <UpdateForm placesData={placesData!} currentPlace={currentPlace!} currentInventory={currentInventory}/>\r\n    }\r\n    return <AddForm placesData={placesData} currentPlace={currentPlace}/>\r\n  };\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Route} from 'react-router-dom'\r\nimport {Places} from \"./Places\";\r\nimport {ViewPlace} from \"./ViewPlace\";\r\nimport {Inventorys} from \"./Inventorys\";\r\nimport {InventoryForm} from \"./Forms/InventoryForm\";\r\nimport {InventoryData, PlacesData} from \"../../types\";\r\nimport {api} from \"../../lib\";\r\n\r\n\r\ntype State = {\r\n  placesData: PlacesData | null,\r\n  inventoryData: InventoryData | null\r\n  loading: boolean\r\n}\r\nconst Content = () => {\r\n  const [{placesData, inventoryData, loading}, setState] = useState<State>({\r\n    placesData: null,\r\n    inventoryData: null,\r\n    loading: true\r\n  })\r\n\r\n  useEffect(() => {\r\n    const getState = async () => {\r\n      const places = await api.getPlaces()\r\n      const inventory = await api.getInventory()\r\n      if (places && inventory) {\r\n        setState({placesData: places, inventoryData: inventory, loading: false})\r\n      }\r\n    }\r\n    getState()\r\n    console.log('effect')\r\n  }, [])\r\n\r\n  const deleteInventory = async (inventoryId: string) => {\r\n    setState({placesData: null, inventoryData: null, loading: true})\r\n    const index = inventoryData?.inventory.findIndex(invent => invent.id === inventoryId)\r\n    inventoryData?.inventory!.splice(index!, 1)\r\n    await api.deleteInventory(inventoryId)\r\n    setState({placesData, inventoryData, loading: false})\r\n  }\r\n\r\n  if (loading) {\r\n    return <div>Loading</div>\r\n  }\r\n\r\n  return (\r\n    <div className={'layout__content'}>\r\n      <Route exact path={'/places'}><Places placesData={placesData!}/></Route>\r\n      <Route exact path={'/place/:id'} render={props => <ViewPlace {...props}/>}/>\r\n      <Route exact path={'/inventory'}><Inventorys placesData={placesData} inventoryData={inventoryData}\r\n                                                   deleteInventory={deleteInventory}/></Route>\r\n      <Route path={'/inventory/add-new'}\r\n             render={props => <InventoryForm {...props} placesData={placesData} inventoryData={inventoryData}/>}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n\r\n","import React from 'react';\r\nimport './style.scss';\r\nimport {Menu} from \"./sections/Menu\";\r\nimport {HashRouter as Router, Route} from 'react-router-dom'\r\nimport {Header} from \"./sections/Header\";\r\nimport Content from \"./sections/Content\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className={'app'}>\r\n        <Menu/>\r\n        <div className=\"layout\">\r\n          <Header/>\r\n          <Content/>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}